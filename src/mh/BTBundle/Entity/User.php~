<?php

namespace mh\BTBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * User
 */
class User
{
	const SOURCE_INTERNAL = 0;
    const SOURCE_FROM_VK = 1;
    const SOURCE_FROM_FB = 2;
    const SOURCE_FROM_ML = 3;
    const SOURCE_FROM_GL = 4;
    const SOURCE_FROM_TW = 5;
    const SOURCE_FROM_OD = 6;

    public static function getSourceByMode($mode)
    {
        switch ($mode) {
            case 'vk': return self::SOURCE_FROM_VK;
            case 'fb': return self::SOURCE_FROM_FB;
            case 'ml': return self::SOURCE_FROM_ML;
            case 'gl': return self::SOURCE_FROM_GL;
            case 'tw': return self::SOURCE_FROM_TW;
            case 'od': return self::SOURCE_FROM_OD;
        }
    }

	public function getSourceText()
	{
		switch ($this->getSource()) {
            case self::SOURCE_INTERNAL: return 'внутренн€€ система';
            case self::SOURCE_FROM_VK: return 'vk.com';
            case self::SOURCE_FROM_FB: return 'facebook.com';
            case self::SOURCE_FROM_ML: return 'mail.ru';
            case self::SOURCE_FROM_GL: return 'plus.google.com';
            case self::SOURCE_FROM_TW: return 'twitter.com';
            case self::SOURCE_FROM_OD: return 'odnoklassniki.ru';
        }
	}

    public function __toString()
    {
        return $this->getScreenName();
    }

    /**
     * @ORM\PrePersist
     */
    public function prePersist()
    {
        $this->setCreatedDate(new \DateTime());
        $this->setCountersDay(new \DateTime());
        $this->setScores(0);
        $this->setCountAnswerAtDay(0);
        $this->setCountQuestionAtDay(0);
        $this->setCountPostForeignLinkAtDay(0);
        $this->setCountPostForeignLinkOnTrustedSiteAtDay(0);
		if (!$this->getSalt()) {
			$salt = \mh\Common\Random::generate(array('length' => 10));
			$this->setSalt($salt);
			$this->setPassword($this->passwordEncode($this->getPassword()));
		}
		if (!$this->getInviteCode()) {
			$code = \mh\Common\Random::generate(array('length' => 10));
			$this->setInviteCode($code);
		}
    }


    public function passwordEncode($password)
    {
        return md5($password . 'sd' . $this->getSalt());
    }

    public function resetCounters()
    {
        $datel = mktime(0, 0, 0, date("m"), date("d"), date("Y"));
		$d = $this->getCountersDay();
		$date2 = mktime(0, 0, 0, $d->format('m'), $d->format('d'), $d->format('Y'));
		if ($datel != $date2) {
            $this->setCountersDay(new \DateTime());
            $this->setCountPostAtDay(0);
            $this->setCountAnswerAtDay(0);
            $this->setCountQuestionAtDay(0);
            $this->setCountPostForeignLinkAtDay(0);
            $this->setCountPostForeignLinkOnTrustedSiteAtDay(0);
        }
    }

	public function getAvatar()
    {
		$image = $this->getFoto() ? $this->getFoto() : new UserFoto();
		return $image->getBrowserPath();
    }

	public function setScreenName($screenName)
    {
        $this->screenName = strtolower($screenName);

        return $this;
    }
    /*--------------------------------------------------------------------------*/

}