<?php

namespace mh\BTBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use mh\BTBundle\DBAL\ModerationStatusType;

/**
 * Post
 */
class Post extends Base\ContentObjectBase
{
	/**
     * @ORM\PrePersist
     */
    public function prePersist()
    {
		$this->setShowOnMain(false);
		$this->setCreatedDate(new \DateTime());
        $this->setModerationStatus(ModerationStatusType::NOT_MODERATED);
        if (!$this->getScores()) $this->setScores(0);

        parent::prePersist();
    }

    public function getTagsString()
    {
        $ids = array();
        foreach ($this->getTags() as $tag) {
            $ids[] = $tag->getLabel();
        }
        return implode(', ', $ids);
    }

    public function __toString()
    {
        return $this->getTitle();
    }

	public function getPreview()
    {
		if ($this->getImage()) {
			$image = $this->getImage();
		} else {
			$image = new \mh\BTBundle\Entity\PostImage();
            $image->setFilename('unknow');
		}

		return $image;
    }

	public function getTextPreview()
	{
		if ($this->getSubtitle()) {
			return $this->getSubtitle();
		}
		return mb_substr($this->getClearContent(), 0, 100, 'UTF-8');
	}

	public function getClearContent()
	{
		$text = strip_tags($this->getContent());
		return preg_replace("/&#?[a-z0-9]+;/i", " ", $text);
		//return html_entity_decode($text);
	}

	public function getClearContentLength()
	{
		return mb_strlen($this->getClearContent(),'UTF-8');
	}

	public function getImageCount()
	{
		preg_match_all('/<img[^>]+>/i', $this->getContent(), $result);
		return $result ? count($result[0]) : 0;
	}

    /*--------------------------------------------------------------------------*/


}